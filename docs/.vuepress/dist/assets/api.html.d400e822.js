import{d as e}from"./app.7717e83a.js";import{_ as a}from"./plugin-vue_export-helper.21dcd24c.js";const t={},i=e('<h1 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h1><p><strong>API entry</strong></p><h2 id="bravapiprovider" tabindex="-1"><a class="header-anchor" href="#bravapiprovider" aria-hidden="true">#</a> BravApiProvider</h2><p>The provider of the Bluetooth API, through which the singleton object of the Bluetooth API can be obtained</p><p><strong>method</strong></p><h3 id="initsharedbleapi" tabindex="-1"><a class="header-anchor" href="#initsharedbleapi" aria-hidden="true">#</a> initSharedBleApi</h3><ul><li>type (context:Context)-&gt;void</li></ul><blockquote><p>This parameter is only required for Android</p></blockquote><p>To initialize the API, it needs to be initialized at least once.</p><h3 id="sharedbleapi" tabindex="-1"><a class="header-anchor" href="#sharedbleapi" aria-hidden="true">#</a> sharedBleApi</h3><ul><li>Types of ()-&gt; <a href="#bravbleapi">BravBleApi</a></li></ul><p>Get the singleton object of BleApi.</p><h2 id="bravlogger" tabindex="-1"><a class="header-anchor" href="#bravlogger" aria-hidden="true">#</a> BravLogger</h2><p>The log tool used by the SDK, you can set the log level and set the log listener</p><p><strong>constant</strong></p><ul><li>public static final int LOG_LEVEL_NONE = 0;</li><li>public static final int LOG_LEVEL_ERROR = 1;</li><li>public static final int LOG_LEVEL_ALL = 2;</li></ul><p>Used to indicate the level of the log, where <code>LOG_LEVEL_NONE</code> means do not print any log in the console, <code>LOG_LEVEL_ERROR</code> means print error log, <code>LOG_LEVEL_ALL</code> means print all logs</p><h3 id="loggerlevel" tabindex="-1"><a class="header-anchor" href="#loggerlevel" aria-hidden="true">#</a> loggerLevel</h3><ul><li>class level variable of type Int Log level, readable and writable. After setting, you can impress the logs printed by the SDK in the console</li></ul><blockquote><p>Please use the above 3 constants to set</p></blockquote><h3 id="setloggerlistener" tabindex="-1"><a class="header-anchor" href="#setloggerlistener" aria-hidden="true">#</a> setLoggerListener</h3><ul><li>type (loggerListener:<a href="#bravloggerlistener">BravLoggerListener</a>)</li></ul><blockquote><p>Android only available</p></blockquote><p>Set up a log listener, which will call back the log to loggerListener</p><h3 id="loggerdelegate" tabindex="-1"><a class="header-anchor" href="#loggerdelegate" aria-hidden="true">#</a> loggerDelegate</h3><ul><li>Type <a href="#bravloggerdelegate">BravLoggerDelegate</a></li></ul><blockquote><p>Only available on iOS</p></blockquote><p>Set up a log listener, which will call back the log to loggerDelegate</p><h2 id="bravloggerlistener" tabindex="-1"><a class="header-anchor" href="#bravloggerlistener" aria-hidden="true">#</a> BravLoggerListener</h2><p>Log listener, same as BravLoggerDelegate</p><h2 id="bravloggerdelegate" tabindex="-1"><a class="header-anchor" href="#bravloggerdelegate" aria-hidden="true">#</a> BravLoggerDelegate</h2><p>log listener</p><h3 id="onlog" tabindex="-1"><a class="header-anchor" href="#onlog" aria-hidden="true">#</a> onLog</h3><ul><li>Type (tag:String, text:String)-&gt;void</li></ul><p>Callback normal debug log</p><h3 id="onerror" tabindex="-1"><a class="header-anchor" href="#onerror" aria-hidden="true">#</a> onError</h3><ul><li>Type (tag:String, text:String)-&gt;void</li></ul><p>Callback error log information</p><h2 id="bravbleapi" tabindex="-1"><a class="header-anchor" href="#bravbleapi" aria-hidden="true">#</a> BravBleApi</h2><ul><li>method</li></ul><h3 id="getbleenablestate" tabindex="-1"><a class="header-anchor" href="#getbleenablestate" aria-hidden="true">#</a> getBleEnableState</h3><ul><li>Types of ()-&gt; <a href="#bravbleenablestate">BravBleEnableState</a></li></ul><p>Returns the status of bluetooth</p><h3 id="setbleeventlistener" tabindex="-1"><a class="header-anchor" href="#setbleeventlistener" aria-hidden="true">#</a> setBleEventListener</h3><ul><li>type (listener:<a href="#bravbleeventlistener">BravBleEventListener</a>)-&gt;void</li></ul><blockquote><p>Android only</p></blockquote><p>Set up a Bluetooth event callback listener</p><h3 id="bleeventdelegate" tabindex="-1"><a class="header-anchor" href="#bleeventdelegate" aria-hidden="true">#</a> bleEventDelegate</h3><ul><li>Type <a href="#bravbleeventdelegate">BravBleEventDelegate</a></li></ul><blockquote><p>iOS only</p></blockquote><p>Set up a Bluetooth event callback listener</p><h3 id="close" tabindex="-1"><a class="header-anchor" href="#close" aria-hidden="true">#</a> close</h3><ul><li>Types of ()-&gt;void</li></ul><p>stop work and free resources</p><p>If the device is currently connected, it will be disconnected.</p><p>If it is currently scanning, it will stop scanning</p><h3 id="startscan" tabindex="-1"><a class="header-anchor" href="#startscan" aria-hidden="true">#</a> startScan</h3><ul><li>Type (options: <a href="#bravscanoptions">BravScanOptions</a>)-&gt;-<a href="#bravresult">bravresult&gt;</a></li></ul><p>Start bluetooth scan and return whether the operation is successful</p><h3 id="stopscan" tabindex="-1"><a class="header-anchor" href="#stopscan" aria-hidden="true">#</a> stopScan</h3><ul><li>Types of ()-&gt;void</li></ul><p>stop scanning</p><h3 id="connectdevice" tabindex="-1"><a class="header-anchor" href="#connectdevice" aria-hidden="true">#</a> connectDevice</h3><p>Connect the device and return whether the operation was successful.</p><ul><li>type (device:<a href="#bravdevice">BravDevice</a>, options:Any, deviceEventListener:BravDeviceEventListener, connectionChangeListener:<a href="#bravbleconnectioneventdelegate">BravBleConnectionEventListener/BravBleConnectionEventDelegate</a> )-&gt;BravResult</li></ul><p>Parameter Description:</p><ul><li>device is the device object that needs to be connected. For convenience, the SDK also overloads a connection method, just pass in deviceId.</li><li>options configuration item, please use <a href="#bravscaledataoptions">BravScaleDataOptions</a> to connect body fat scale</li><li>deviceEventListener device event listener, please use <a href="#bravscaleeventdelegate">BravScaleEventListener/BravScaleEventDelegate</a> to connect to the body fat scale</li><li>connectionChangeListener is used to monitor the change of the connection state of the device. It is a convenient API that can pass null/nil</li></ul><p>Successful connection or disconnection will be called back in <a href="#bravbleconnectioneventdelegate">BravBleConnectionEventListener/BravBleConnectionEventDelegate</a></p><h3 id="disconnectdevice" tabindex="-1"><a class="header-anchor" href="#disconnectdevice" aria-hidden="true">#</a> disconnectDevice</h3><p>disconnect device</p><ul><li>Type (deviceId:String) -&gt;void</li></ul><p>Disconnected device, the disconnection will be called back in <a href="#bravbleconnectioneventdelegate">BravBleConnectionEventListener/BravBleConnectionEventDelegate</a></p><h2 id="bravbleeventlistener" tabindex="-1"><a class="header-anchor" href="#bravbleeventlistener" aria-hidden="true">#</a> BravBleEventListener</h2><p>Same as <code>BravBleEventDelegate</code></p><h2 id="bravbleeventdelegate" tabindex="-1"><a class="header-anchor" href="#bravbleeventdelegate" aria-hidden="true">#</a> BravBleEventDelegate</h2><ul><li>method</li></ul><h3 id="onbleenablestatechange" tabindex="-1"><a class="header-anchor" href="#onbleenablestatechange" aria-hidden="true">#</a> onBleEnableStateChange</h3><ul><li>type (state:<a href="#bravbleenablestate">BravBleEnableState</a>)-&gt;void</li></ul><p>Callback for changes in bluetooth status</p><h3 id="onbravdevicefound" tabindex="-1"><a class="header-anchor" href="#onbravdevicefound" aria-hidden="true">#</a> onBravDeviceFound</h3><ul><li>type (device:<a href="#bravdevice">BravDevice</a>)-void</li></ul><p>Callback for available devices scanned</p><h2 id="bravbleconnectioneventlistener" tabindex="-1"><a class="header-anchor" href="#bravbleconnectioneventlistener" aria-hidden="true">#</a> BravBleConnectionEventListener</h2><p>\u540C BravBleConnectionEventDelegate</p><h2 id="bravbleconnectioneventdelegate" tabindex="-1"><a class="header-anchor" href="#bravbleconnectioneventdelegate" aria-hidden="true">#</a> BravBleConnectionEventDelegate</h2><ul><li>method</li></ul><h3 id="onconnectionchange" tabindex="-1"><a class="header-anchor" href="#onconnectionchange" aria-hidden="true">#</a> onConnectionChange</h3><ul><li>Type (deviceId:String,state:<a href="#bravdeviceconnectionstate">BravDeviceConnectionState</a>)</li></ul><p>Call back the state change of the bluetooth connection</p><h2 id="bravscaleeventlistener" tabindex="-1"><a class="header-anchor" href="#bravscaleeventlistener" aria-hidden="true">#</a> BravScaleEventListener</h2><p>\u540C BravScaleEventDelegate</p><h2 id="bravscaleeventdelegate" tabindex="-1"><a class="header-anchor" href="#bravscaleeventdelegate" aria-hidden="true">#</a> BravScaleEventDelegate</h2><p>Body fat scale event callback object</p><h3 id="ongetunsteadyweight" tabindex="-1"><a class="header-anchor" href="#ongetunsteadyweight" aria-hidden="true">#</a> onGetUnsteadyWeight</h3><ul><li>Type (deviceId:String, weight:Double)-&gt;void</li></ul><p>Get the callback of the unstable weight of the scale, and the APP can display the interface synchronously to obtain a better measurement experience</p><h3 id="onmeasurecomplete" tabindex="-1"><a class="header-anchor" href="#onmeasurecomplete" aria-hidden="true">#</a> onMeasureComplete</h3><ul><li>Type (deviceId:String,scaleData:<a href="#bravscaledata">BravScaleData</a>)-&gt;void</li></ul><p>After the measurement is completed, the complete measurement data will be recalled</p><h3 id="ongetofflinedata" tabindex="-1"><a class="header-anchor" href="#ongetofflinedata" aria-hidden="true">#</a> onGetOfflineData</h3><ul><li>Type (deviceId:String, scaleData: <a href="#bravscaleorigindata">BravOriginScale</a>[])-&gt;void</li></ul><p>After receiving offline data, <a href="#bravscaleorigindata">BravOriginScale</a>-can-be-combined-with-<a href="#bravscaleuser">bravscaleuser</a>-to-generate-a-complete-<a href="#bravscaledata">bravscaledata</a></p><blockquote><p>The offline data is that the user did not connect to the APP when he used the scale for measurement. At this time, the scale will cache the data and upload it back when the user connects to the APP next time.</p></blockquote><p><strong>Model related</strong></p><h2 id="bravdevice" tabindex="-1"><a class="header-anchor" href="#bravdevice" aria-hidden="true">#</a> BravDevice</h2><h3 id="deviceid" tabindex="-1"><a class="header-anchor" href="#deviceid" aria-hidden="true">#</a> deviceId</h3><ul><li>type String</li></ul><p>Device id, this is the unique identifier of the device obtained from the mobile phone, which is represented as mac address on Android and udid on iOS</p><h3 id="mac" tabindex="-1"><a class="header-anchor" href="#mac" aria-hidden="true">#</a> mac</h3><ul><li>type String</li></ul><p>The mac address of the device, unique for each device, the format is <code>00:11:22:33:44:55</code></p><p>can be used to differentiate devices</p><h3 id="transfertype" tabindex="-1"><a class="header-anchor" href="#transfertype" aria-hidden="true">#</a> transferType</h3><ul><li>Type <a href="#bravbletransfertype">BravBleTransferType</a></li></ul><p>Data transmission type, currently only Broadcast (using Bluetooth broadcast to transmit data)</p><h2 id="category" tabindex="-1"><a class="header-anchor" href="#category" aria-hidden="true">#</a> category</h2><ul><li>Type <a href="#bravdevicecategory">BravDeviceCategory</a></li></ul><p>Equipment type, used to distinguish body fat scales\u3001Blood pressure monitor or other equipment, currently only supports body fat scale (Scale)</p><h3 id="modelid" tabindex="-1"><a class="header-anchor" href="#modelid" aria-hidden="true">#</a> modelId</h3><ul><li>type String</li></ul><p>Model ID, used to uniquely distinguish a model, the format is: <code>0001</code> Different types of equipment, the model ID is numbered separately</p><h3 id="rssi" tabindex="-1"><a class="header-anchor" href="#rssi" aria-hidden="true">#</a> rssi</h3><ul><li>type Int</li></ul><p>Signal strength, indicating the strength of the Bluetooth signal, is an integer less than 0 and greater than -127, the smaller the value, the smaller the signal</p><h2 id="bravscanoptions" tabindex="-1"><a class="header-anchor" href="#bravscanoptions" aria-hidden="true">#</a> BravScanOptions</h2><h3 id="mac-1" tabindex="-1"><a class="header-anchor" href="#mac-1" aria-hidden="true">#</a> mac</h3><ul><li>Type: String</li></ul><p>mac address, if the value is not empty, the SDK will only return the device with the specified mac address</p><h3 id="minrssi" tabindex="-1"><a class="header-anchor" href="#minrssi" aria-hidden="true">#</a> minRssi</h3><ul><li>Types of: Int</li></ul><p>Minimum signal threshold, if value&lt;0, the SDK only returns devices whose signal value is greater than this value.</p><p><strong>Body Fat Scale Related Model</strong></p><h2 id="bravscaleuser" tabindex="-1"><a class="header-anchor" href="#bravscaleuser" aria-hidden="true">#</a> BravScaleUser</h2><p>Body fat scale user, the object used to transmit to the body fat scale and the final measurement result</p><h3 id="gender" tabindex="-1"><a class="header-anchor" href="#gender" aria-hidden="true">#</a> gender</h3><ul><li>Type <a href="#bravgender">BravGender</a></li></ul><p>gender</p><h3 id="height" tabindex="-1"><a class="header-anchor" href="#height" aria-hidden="true">#</a> height</h3><ul><li>type Int</li></ul><p>Height, cm. If APP is the unit of other values, please convert it to cm and then pass it in</p><p>Valid values are: 40~240</p><h3 id="age" tabindex="-1"><a class="header-anchor" href="#age" aria-hidden="true">#</a> age</h3><ul><li>type Int</li></ul><p>Valid values are: 3~80</p><h3 id="athletetype" tabindex="-1"><a class="header-anchor" href="#athletetype" aria-hidden="true">#</a> athleteType</h3><ul><li>type Int</li></ul><p>Athlete physique type, 0 is no, 1 is yes. If a person has a large amount of exercise, it is recommended to use this value as 1, and the calculated body fat rate is more accurate</p><h3 id="scalealgorithmmethod" tabindex="-1"><a class="header-anchor" href="#scalealgorithmmethod" aria-hidden="true">#</a> scaleAlgorithmMethod</h3><ul><li>type <a href="#bravscalealgorithmmethod">BravScaleAlgorithmMethod</a></li></ul><p>Body fat scale algorithm type, currently only supports <code>common</code> and <code>asia</code></p><h2 id="bravscaledevice" tabindex="-1"><a class="header-anchor" href="#bravscaledevice" aria-hidden="true">#</a> BravScaleDevice</h2><p>Body fat scale device object, it inherits from <a href="#bravdevice">BravDevice</a></p><h3 id="weight" tabindex="-1"><a class="header-anchor" href="#weight" aria-hidden="true">#</a> weight</h3><ul><li>type Double</li></ul><p>Indicates the weight value on the body fat scale at that time, the unit is kg, if the body fat scale has been connected, this property is always 0</p><h3 id="isscreenon" tabindex="-1"><a class="header-anchor" href="#isscreenon" aria-hidden="true">#</a> isScreenOn</h3><ul><li>type Boolean</li></ul><p>Indicates whether the screen of the body fat scale is on, <code>false</code> is not bright, <code>true</code> is bright</p><h3 id="isconnected" tabindex="-1"><a class="header-anchor" href="#isconnected" aria-hidden="true">#</a> isConnected</h3><ul><li>type Boolean</li></ul><p>Indicates whether the body fat scale has been connected, <code>false</code> is not connected, <code>true</code> is connected</p><h2 id="bravscaledataoptions" tabindex="-1"><a class="header-anchor" href="#bravscaledataoptions" aria-hidden="true">#</a> BravScaleDataOptions</h2><p>Configuration items required to connect the body fat scale</p><h3 id="user" tabindex="-1"><a class="header-anchor" href="#user" aria-hidden="true">#</a> user</h3><ul><li>type <a href="#bravscaleuser">BravScaleUser</a></li></ul><p>User information required to connect to the body fat scale.</p><h3 id="unit" tabindex="-1"><a class="header-anchor" href="#unit" aria-hidden="true">#</a> unit</h3><ul><li>Type <a href="#bravscaleunit">BravScaleUnit</a></li></ul><p>The unit of the body fat scale that needs to be set. Each time the body fat scale is connected, the unit of the body fat scale will be set.</p><h2 id="bravscaleorigindata" tabindex="-1"><a class="header-anchor" href="#bravscaleorigindata" aria-hidden="true">#</a> BravScaleOriginData</h2><p>Raw data on the scale</p><h3 id="weight-1" tabindex="-1"><a class="header-anchor" href="#weight-1" aria-hidden="true">#</a> weight</h3><ul><li>type Double</li></ul><p>weight information</p><h3 id="impedance" tabindex="-1"><a class="header-anchor" href="#impedance" aria-hidden="true">#</a> impedance</h3><ul><li>type Int</li></ul><p>bioimpedance</p><h3 id="mac-2" tabindex="-1"><a class="header-anchor" href="#mac-2" aria-hidden="true">#</a> mac</h3><ul><li>type String</li></ul><p>The mac address of the scale</p><h3 id="time" tabindex="-1"><a class="header-anchor" href="#time" aria-hidden="true">#</a> time</h3><ul><li>type Date</li></ul><p>Indicates the measurement time of this piece of data. If it is real-time measurement, it will return the current time. Accurate to s(seconds)</p><h2 id="bravscaledata" tabindex="-1"><a class="header-anchor" href="#bravscaledata" aria-hidden="true">#</a> BravScaleData</h2><p>Body fat scale measurement data, it represents the complete measurement data</p><h3 id="user-1" tabindex="-1"><a class="header-anchor" href="#user-1" aria-hidden="true">#</a> user</h3><ul><li>type <a href="#bravscaleuser">BravScaleUser</a></li></ul><p>Indicates the user information corresponding to this piece of data</p><h3 id="origindata" tabindex="-1"><a class="header-anchor" href="#origindata" aria-hidden="true">#</a> originData</h3><ul><li>type <a href="#bravscaleorigindata">BravScaleOriginData</a></li></ul><p>Indicates the original data of the scale corresponding to this piece of data</p><h3 id="weight-2" tabindex="-1"><a class="header-anchor" href="#weight-2" aria-hidden="true">#</a> weight</h3><ul><li>type Double</li></ul><p>weight</p><h3 id="bmi" tabindex="-1"><a class="header-anchor" href="#bmi" aria-hidden="true">#</a> bmi</h3><ul><li>type Double</li></ul><p>BMI</p><h3 id="bodyfatrate" tabindex="-1"><a class="header-anchor" href="#bodyfatrate" aria-hidden="true">#</a> bodyfatRate</h3><ul><li>type Double</li></ul><p>body fat percentage</p><h3 id="bodyfatmass" tabindex="-1"><a class="header-anchor" href="#bodyfatmass" aria-hidden="true">#</a> bodyfatMass</h3><ul><li>type Double</li></ul><p>fat mass</p><h3 id="subfatrate" tabindex="-1"><a class="header-anchor" href="#subfatrate" aria-hidden="true">#</a> subfatRate</h3><ul><li>type Double</li></ul><p>subcutaneous fat</p><h3 id="visfat" tabindex="-1"><a class="header-anchor" href="#visfat" aria-hidden="true">#</a> visfat</h3><ul><li>type Double</li></ul><p>Visceral fat</p><h3 id="waterrate" tabindex="-1"><a class="header-anchor" href="#waterrate" aria-hidden="true">#</a> waterRate</h3><ul><li>type Double</li></ul><p>body water rate</p><h3 id="watermass" tabindex="-1"><a class="header-anchor" href="#watermass" aria-hidden="true">#</a> waterMass</h3><ul><li>type Double</li></ul><p>body water</p><h3 id="bmr" tabindex="-1"><a class="header-anchor" href="#bmr" aria-hidden="true">#</a> bmr</h3><ul><li>type Double</li></ul><p>Basal metabolic rate</p><h3 id="skeletalmusclerate" tabindex="-1"><a class="header-anchor" href="#skeletalmusclerate" aria-hidden="true">#</a> skeletalMuscleRate</h3><ul><li>type Int</li></ul><p>Skeletal muscle rate</p><h3 id="skeletalmusclemass" tabindex="-1"><a class="header-anchor" href="#skeletalmusclemass" aria-hidden="true">#</a> skeletalMuscleMass</h3><ul><li>type Double</li></ul><p>skeletal muscle mass</p><h3 id="musclemass" tabindex="-1"><a class="header-anchor" href="#musclemass" aria-hidden="true">#</a> muscleMass</h3><ul><li>type Double</li></ul><p>muscle mass</p><h3 id="musclerate" tabindex="-1"><a class="header-anchor" href="#musclerate" aria-hidden="true">#</a> muscleRate</h3><ul><li>type Double</li></ul><p>Muscle rate</p><h3 id="lbm" tabindex="-1"><a class="header-anchor" href="#lbm" aria-hidden="true">#</a> lbm</h3><ul><li>type Double</li></ul><p>lean body mass</p><h3 id="bone" tabindex="-1"><a class="header-anchor" href="#bone" aria-hidden="true">#</a> bone</h3><ul><li>type Double</li></ul><p>bone mass</p><h3 id="proteinrate" tabindex="-1"><a class="header-anchor" href="#proteinrate" aria-hidden="true">#</a> proteinRate</h3><ul><li>type Double</li></ul><p>protein rate</p><h3 id="proteinmass" tabindex="-1"><a class="header-anchor" href="#proteinmass" aria-hidden="true">#</a> proteinMass</h3><ul><li>type Double</li></ul><p>protein amount</p><h3 id="score" tabindex="-1"><a class="header-anchor" href="#score" aria-hidden="true">#</a> score</h3><ul><li>type Double</li></ul><p>Fraction</p><h3 id="bodyage" tabindex="-1"><a class="header-anchor" href="#bodyage" aria-hidden="true">#</a> bodyAge</h3><ul><li>type Int</li></ul><p>body age</p><p><strong>type constant</strong></p><h2 id="bravbleenablestate" tabindex="-1"><a class="header-anchor" href="#bravbleenablestate" aria-hidden="true">#</a> BravBleEnableState</h2><p>enumeration object</p><p>Bluetooth enabled</p><h3 id="unknown" tabindex="-1"><a class="header-anchor" href="#unknown" aria-hidden="true">#</a> Unknown</h3><p>Unknown, the SDK is initialized and will be in this state</p><h3 id="enable" tabindex="-1"><a class="header-anchor" href="#enable" aria-hidden="true">#</a> Enable</h3><p>available</p><h3 id="disable" tabindex="-1"><a class="header-anchor" href="#disable" aria-hidden="true">#</a> Disable</h3><p>unavailable</p><h3 id="unauthorized" tabindex="-1"><a class="header-anchor" href="#unauthorized" aria-hidden="true">#</a> Unauthorized</h3><blockquote><p>iOS only</p></blockquote><p>Unauthorized, if it is not in status, it means that in the settings, the user has not authorized the APP Bluetooth permission</p><h2 id="bravbletransfertype" tabindex="-1"><a class="header-anchor" href="#bravbletransfertype" aria-hidden="true">#</a> BravBleTransferType</h2><p>enumeration object</p><p>data communication</p><h3 id="bleconnection" tabindex="-1"><a class="header-anchor" href="#bleconnection" aria-hidden="true">#</a> BleConnection</h3><p>Connect communication using Bluetooth connection</p><h3 id="broadcast" tabindex="-1"><a class="header-anchor" href="#broadcast" aria-hidden="true">#</a> Broadcast</h3><p>Data communication using bluetooth broadcast</p><h2 id="bravdevicecategory" tabindex="-1"><a class="header-anchor" href="#bravdevicecategory" aria-hidden="true">#</a> BravDeviceCategory</h2><p>enumeration object</p><p>device object</p><h3 id="scale" tabindex="-1"><a class="header-anchor" href="#scale" aria-hidden="true">#</a> Scale</h3><p>Body fat scale, currently only supports body fat scale</p><h2 id="bravdeviceconnectionstate" tabindex="-1"><a class="header-anchor" href="#bravdeviceconnectionstate" aria-hidden="true">#</a> BravDeviceConnectionState</h2><p>enumeration object</p><p>Bluetooth connection status</p><h3 id="disconnected" tabindex="-1"><a class="header-anchor" href="#disconnected" aria-hidden="true">#</a> Disconnected</h3><p>not connected</p><h3 id="connecting" tabindex="-1"><a class="header-anchor" href="#connecting" aria-hidden="true">#</a> Connecting</h3><p>Connecting state</p><blockquote><p>This state does not appear for devices with BravBleTransferType of broadcast</p></blockquote><h3 id="connected" tabindex="-1"><a class="header-anchor" href="#connected" aria-hidden="true">#</a> Connected</h3><p>Connected state, the device in this state can perform data communication</p><h3 id="disconnecting" tabindex="-1"><a class="header-anchor" href="#disconnecting" aria-hidden="true">#</a> Disconnecting</h3><p>disconnecting</p><blockquote><p>This state does not appear for devices with BravBleTransferType of broadcast</p></blockquote><h2 id="bravgender" tabindex="-1"><a class="header-anchor" href="#bravgender" aria-hidden="true">#</a> BravGender</h2><p>gender</p><h3 id="male" tabindex="-1"><a class="header-anchor" href="#male" aria-hidden="true">#</a> Male</h3><p>male</p><h3 id="female" tabindex="-1"><a class="header-anchor" href="#female" aria-hidden="true">#</a> Female</h3><p>woman</p><p><strong>body fat scale</strong></p><h2 id="bravscaleunit" tabindex="-1"><a class="header-anchor" href="#bravscaleunit" aria-hidden="true">#</a> BravScaleUnit</h2><p>body fat scale unit</p><p>It should be noted here that no matter what the unit of the body fat scale is, all <code>weight</code> in this document is in kg.</p><h3 id="kg" tabindex="-1"><a class="header-anchor" href="#kg" aria-hidden="true">#</a> kg</h3><p>kilogram</p><h3 id="lb" tabindex="-1"><a class="header-anchor" href="#lb" aria-hidden="true">#</a> lb</h3><p>lb</p><h3 id="st" tabindex="-1"><a class="header-anchor" href="#st" aria-hidden="true">#</a> st</h3><p>Stone</p><h3 id="jin" tabindex="-1"><a class="header-anchor" href="#jin" aria-hidden="true">#</a> jin</h3><p>Jin, a special unit for China</p><h2 id="bravscalealgorithmmethod" tabindex="-1"><a class="header-anchor" href="#bravscalealgorithmmethod" aria-hidden="true">#</a> BravScaleAlgorithmMethod</h2><p>Types of Body Fat Scale Algorithms</p><h3 id="common" tabindex="-1"><a class="header-anchor" href="#common" aria-hidden="true">#</a> common</h3><p>Common algorithm type, using users in Europe and the United States</p><h3 id="asia" tabindex="-1"><a class="header-anchor" href="#asia" aria-hidden="true">#</a> asia</h3><p>Asia-Pacific</p><h2 id="braverrorcode" tabindex="-1"><a class="header-anchor" href="#braverrorcode" aria-hidden="true">#</a> BravErrorCode</h2><p>error code</p><h3 id="success" tabindex="-1"><a class="header-anchor" href="#success" aria-hidden="true">#</a> Success</h3><p>Successful operation</p><h3 id="devicenotfound" tabindex="-1"><a class="header-anchor" href="#devicenotfound" aria-hidden="true">#</a> DeviceNotFound</h3><p>The device was not found</p><h3 id="bluetoothdisabled" tabindex="-1"><a class="header-anchor" href="#bluetoothdisabled" aria-hidden="true">#</a> BluetoothDisabled</h3><p>Bluetooth is not turned on, need to turn on bluetooth</p><h3 id="bluetoothunauthorized" tabindex="-1"><a class="header-anchor" href="#bluetoothunauthorized" aria-hidden="true">#</a> BluetoothUnauthorized</h3><blockquote><p>Only iOS, Android permissions need to determine the positioning permissions by themselves</p></blockquote><p>Bluetooth not authorized</p><h3 id="bluetoothnotinit" tabindex="-1"><a class="header-anchor" href="#bluetoothnotinit" aria-hidden="true">#</a> BluetoothNotInit</h3><p>Bluetooth is not initialized, meaning <a href="#initsharedbleapi">BravApiProvider.initSharedApi</a> is not called</p><h2 id="bravresult" tabindex="-1"><a class="header-anchor" href="#bravresult" aria-hidden="true">#</a> BravResult</h2><p>The operation result, some API calls, will return the object, indicating whether the operation is successful or not</p><h3 id="issuccess" tabindex="-1"><a class="header-anchor" href="#issuccess" aria-hidden="true">#</a> isSuccess</h3><p>Type Boolean</p><p><code>true</code> for successful operation, <code>false</code> for operation failure</p><h3 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> code</h3><p>\u7C7B\u578B <a href="#braverrorcode">BravErrorCode</a></p><p>Error code, if not <code>Success</code>, it indicates the type of error that occurred</p><h3 id="data" tabindex="-1"><a class="header-anchor" href="#data" aria-hidden="true">#</a> data</h3><p>type generic</p><p>Represents different types according to different operations</p><p><strong>tool method</strong></p><h2 id="bravutils" tabindex="-1"><a class="header-anchor" href="#bravutils" aria-hidden="true">#</a> BravUtils</h2><h3 id="toprecision" tabindex="-1"><a class="header-anchor" href="#toprecision" aria-hidden="true">#</a> toPrecision</h3><ul><li>Type: (value:Double , scale:Int)-&gt;Double Accurate <code>value</code> to <code>scale</code> decimal places</li></ul><h3 id="kg2jin" tabindex="-1"><a class="header-anchor" href="#kg2jin" aria-hidden="true">#</a> kg2jin</h3><ul><li>type (value:Double)-&gt;Double</li></ul><p>unit conversion method</p><h3 id="jin2kg" tabindex="-1"><a class="header-anchor" href="#jin2kg" aria-hidden="true">#</a> jin2kg</h3><ul><li>type (value:Double)-&gt;Double</li></ul><p>unit conversion method</p><h3 id="kg2lb" tabindex="-1"><a class="header-anchor" href="#kg2lb" aria-hidden="true">#</a> kg2lb</h3><ul><li>type (value:Double)-&gt;Double</li></ul><p>unit conversion method</p><h3 id="lb2kg" tabindex="-1"><a class="header-anchor" href="#lb2kg" aria-hidden="true">#</a> lb2kg</h3><ul><li>type (value:Double)-&gt;Double</li></ul><p>unit conversion method</p><h3 id="jin2lb" tabindex="-1"><a class="header-anchor" href="#jin2lb" aria-hidden="true">#</a> jin2lb</h3><ul><li>type (value:Double)-&gt;Double</li></ul><p>unit conversion method</p><h3 id="lb2jin" tabindex="-1"><a class="header-anchor" href="#lb2jin" aria-hidden="true">#</a> lb2jin</h3><ul><li>type (value:Double)-&gt;Double</li></ul><p>unit conversion method</p>',356);function r(n,l){return i}var o=a(t,[["render",r]]);export{o as default};
